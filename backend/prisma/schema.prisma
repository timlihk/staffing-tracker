generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model activity_log {
  id          Int      @id @default(autoincrement())
  user_id     Int?
  action_type String
  entity_type String
  entity_id   Int?
  description String?
  created_at  DateTime @default(now())
  users       users?   @relation(fields: [user_id], references: [id])

  @@index([created_at(sort: Desc)])
  @@index([entity_id])
  @@index([entity_type, entity_id])
  @@index([entity_type])
  @@index([user_id])
}

model email_settings {
  id                          Int      @id @default(autoincrement())
  email_notifications_enabled Boolean  @default(true)
  notify_partner              Boolean  @default(true)
  notify_associate            Boolean  @default(true)
  notify_junior_flic          Boolean  @default(true)
  notify_senior_flic          Boolean  @default(true)
  notify_intern               Boolean  @default(true)
  notify_bc_working_attorney  Boolean  @default(true)
  updated_at                  DateTime
  updated_by                  Int?
}

model project_assignments {
  id           Int       @id @default(autoincrement())
  project_id   Int
  staff_id     Int
  jurisdiction String?
  start_date   DateTime?
  end_date     DateTime?
  notes        String?
  created_at   DateTime  @default(now())
  updated_at   DateTime
  projects     projects  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  staff        staff     @relation(fields: [staff_id], references: [id], onDelete: Cascade)

  @@unique([project_id, staff_id, jurisdiction])
  @@index([project_id])
  @@index([staff_id])
}

model project_change_history {
  id          Int      @id @default(autoincrement())
  project_id  Int
  field_name  String
  old_value   String?
  new_value   String?
  change_type String
  changed_by  Int?
  changed_at  DateTime @default(now())
  users       users?   @relation(fields: [changed_by], references: [id])
  projects    projects @relation(fields: [project_id], references: [id], onDelete: Cascade)

  @@index([changed_at(sort: Desc)])
  @@index([project_id])
}

model projects {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique
  category               String
  status                 String
  priority               String?
  notes                  String?
  created_at             DateTime                 @default(now())
  updated_at             DateTime
  el_status              String?
  bc_attorney            String?
  timetable              Timetable?
  filing_date            DateTime?
  listing_date           DateTime?
  sector                 String?
  side                   String?
  last_confirmed_at      DateTime?
  last_confirmed_by      Int?
  project_assignments    project_assignments[]
  project_change_history project_change_history[]
  users                  users?                   @relation(fields: [last_confirmed_by], references: [id])

  @@index([category])
  @@index([last_confirmed_at])
  @@index([priority])
  @@index([status])
  @@index([timetable])
}

model staff {
  id                   Int                    @id @default(autoincrement())
  name                 String
  email                String?                @unique
  position             String
  department           String?
  status               String                 @default("active")
  notes                String?
  created_at           DateTime               @default(now())
  updated_at           DateTime
  project_assignments  project_assignments[]
  staff_change_history staff_change_history[]
  users                users[]

  @@index([department])
  @@index([position])
  @@index([status])
}

model staff_change_history {
  id          Int      @id @default(autoincrement())
  staff_id    Int
  field_name  String
  old_value   String?
  new_value   String?
  change_type String
  changed_by  Int?
  changed_at  DateTime @default(now())
  users       users?   @relation(fields: [changed_by], references: [id])
  staff       staff    @relation(fields: [staff_id], references: [id], onDelete: Cascade)

  @@index([changed_at(sort: Desc)])
  @@index([staff_id])
}

model users {
  id                     Int                      @id @default(autoincrement())
  username               String                   @unique
  email                  String                   @unique
  password_hash          String
  role                   String                   @default("viewer")
  staff_id               Int?
  last_login             DateTime?
  created_at             DateTime                 @default(now())
  must_reset_password    Boolean                  @default(false)
  last_activity          DateTime?
  activity_log           activity_log[]
  project_change_history project_change_history[]
  projects               projects[]
  staff_change_history   staff_change_history[]
  staff                  staff?                   @relation(fields: [staff_id], references: [id])

  @@index([last_activity])
  @@index([role])
}

enum Timetable {
  PRE_A1
  A1
  HEARING
  LISTING
}
